<?php

namespace App\Http\Controllers\Dashboard;

use App\Models\{{studlySingular}};
use Illuminate\Routing\Controller;
use App\Http\Requests\Dashboard\{{studlySingular}}Request;
use Illuminate\Foundation\Validation\ValidatesRequests;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests;

class {{studlySingular}}Controller extends Controller
{
    use AuthorizesRequests, ValidatesRequests;

    /**
     * {{studlySingular}}Controller constructor.
     */
    public function __construct()
    {
        $this->authorizeResource({{studlySingular}}::class, '{{lowercaseSingular}}');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        ${{lowercasePlural}} = {{studlySingular}}::filter()->paginate();

        return view('dashboard.{{lowercasePlural}}.index', compact('{{lowercasePlural}}'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('dashboard.{{lowercasePlural}}.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param \App\Http\Requests\Dashboard\{{studlySingular}}Request $request
     * @return \Illuminate\Http\RedirectResponse
     */
    public function store({{studlySingular}}Request $request)
    {
        ${{lowercaseSingular}} = {{studlySingular}}::create($request->all());

        flash(trans('{{lowercasePlural}}.messages.created'));

        return redirect()->route('dashboard.{{lowercasePlural}}.show', ${{lowercaseSingular}});
    }

    /**
     * Display the specified resource.
     *
     * @param \App\Models\{{studlySingular}} ${{lowercaseSingular}}
     * @return \Illuminate\Http\Response
     */
    public function show({{studlySingular}} ${{lowercaseSingular}})
    {
        return view('dashboard.{{lowercasePlural}}.show', compact('{{lowercaseSingular}}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param \App\Models\{{studlySingular}} ${{lowercaseSingular}}
     * @return \Illuminate\Http\Response
     */
    public function edit({{studlySingular}} ${{lowercaseSingular}})
    {
        return view('dashboard.{{lowercasePlural}}.edit', compact('{{lowercaseSingular}}'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param \App\Http\Requests\{{studlySingular}}Request $request
     * @param \App\Models\{{studlySingular}} ${{lowercaseSingular}}
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update({{studlySingular}}Request $request, {{studlySingular}} ${{lowercaseSingular}})
    {
        ${{lowercaseSingular}}->update($request->all());

        flash(trans('{{lowercasePlural}}.messages.updated'));

        return redirect()->route('dashboard.{{lowercasePlural}}.show', ${{lowercaseSingular}});
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param \App\Models\{{studlySingular}} ${{lowercaseSingular}}
     * @throws \Exception
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy({{studlySingular}} ${{lowercaseSingular}})
    {
        ${{lowercaseSingular}}->delete();

        flash(trans('{{lowercasePlural}}.messages.deleted'));

        return redirect()->route('dashboard.{{lowercasePlural}}.index');
    }

    /**
     * Display a listing of the trashed resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function trashed()
    {
        $this->authorize('viewTrash', {{studlySingular}}::class);

        ${{lowercasePlural}} = {{studlySingular}}::onlyTrashed()->paginate();

        return view('dashboard.{{lowercasePlural}}.trashed', compact('{{lowercasePlural}}'));
    }

    /**
     * Display the specified trashed resource.
     *
     * @param \App\Models\{{studlySingular}} ${{lowercaseSingular}}
     * @return \Illuminate\Http\Response
     */
    public function showTrashed({{studlySingular}} ${{lowercaseSingular}})
    {
        return view('dashboard.{{lowercasePlural}}.show', compact('{{lowercaseSingular}}'));
    }

    /**
     * Restore the trashed resource.
     *
     * @param \App\Models\{{studlySingular}} ${{lowercaseSingular}}
     * @return \Illuminate\Http\RedirectResponse
     */
    public function restore({{studlySingular}} ${{lowercaseSingular}})
    {
        $this->authorize('restore', ${{lowercaseSingular}});

        ${{lowercaseSingular}}->restore();

        flash()->success(trans('{{lowercasePlural}}.messages.restored'));

        return redirect()->route('dashboard.{{lowercasePlural}}.trashed');
    }

    /**
     * Force delete the specified resource from storage.
     *
     * @param \App\Models\{{studlySingular}} ${{lowercaseSingular}}
     * @throws \Exception
     * @return \Illuminate\Http\RedirectResponse
     */
    public function forceDelete({{studlySingular}} ${{lowercaseSingular}})
    {
        $this->authorize('forceDelete', ${{lowercaseSingular}});

        ${{lowercaseSingular}}->forceDelete();

        flash(trans('{{lowercasePlural}}.messages.deleted'));

        return redirect()->route('dashboard.{{lowercasePlural}}.trashed');
    }
}
